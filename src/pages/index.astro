---
import "../styles/global.css";
import Header from "../components/Header.astro";
import HeroSection from "../components/HeroSection.astro";
import FeaturesSection from "../components/FeaturesSection.astro";
import AnalyticsSection from "../components/AnalyticsSection.astro";
import AutomationSection from "../components/AutomationSection.astro";
import MidCTA from "../components/MidCTA.astro";
import PricingSection from "../components/PricingSection.astro";
import FAQSection from "../components/FAQSection.astro";
import WaitlistCTA from "../components/WaitlistCTA.astro";
import Footer from "../components/Footer.astro";
---

<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <title>Modi — Control unificado de comercio</title>
    <meta name="description" content="Administra múltiples tiendas online desde un solo lugar. Vincula productos, recibe actualizaciones en tiempo real, analítica unificada y automatizaciones de precios inteligentes. Moderno, rápido y bellamente simple." />
  </head>
  <body class="antialiased text-slate-800 bg-white selection:bg-[#eb6517]/15 selection:text-[#eb6517]">
    <Header />

    <main>
      <HeroSection />

      <FeaturesSection />

      <AnalyticsSection />

      <MidCTA />

      <AutomationSection />

      <FAQSection />

      <WaitlistCTA />
    </main>

    <Footer />

    <script is:inline>
      const video = document.getElementById('heroVideo');
      const fallback = document.getElementById('videoFallback');
      if (video) {
        const hideFallback = () => fallback?.classList.add('hidden');
        video.addEventListener('playing', hideFallback, { once: true });
        video.addEventListener('loadeddata', () => {
          // Attempt to play on load for browsers blocking autoplay
          video.play().catch(() => {});
        });
        // If source 404s, keep fallback visible
        video.addEventListener('error', () => fallback?.classList.remove('hidden'));
      }
    </script>
  </body>
  </html>
